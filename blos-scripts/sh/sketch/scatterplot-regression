#!/bin/bash

# DEFAULT VALUES
SKETCH_HH=100
SKETCH_SIZE_DELTA="0.5 0.1 0.05 0.01"
SKETCH_SIZE_EPSILON="0.1 0.01 0.001 0.0001"
INPUTSPACE_RESOLUTION=2
DIMENSION=2
DPI=100
FORMAT=png
TITLE=
SKIP_LEARNING="--skip-learning false"
ITERATIONS=100
DISCOVERY=""
CLASS=SketchedLinearRegression
REGRESSION_TYPE=linear

# some arguments don't have a corresponding value to go with it such
# as in the --default example).
# note: if this is set to > 0 the /etc/hosts part is not recognized ( may be a bug )
while [[ $# > 1 ]]
do
key="$1"

case $key in
    -d|--dataset-dir)
    DATA_DIR="$2"
    shift # past argument
    ;;
    -D|--sketch-delta)
    SKETCH_SIZE_DELTA="$2"
    shift # past argument
    ;;
    -E|--sketch-epsilon)
    SKETCH_SIZE_EPSILON="$2"
    shift # past argument
    ;;
    -h|--heavy-hitters)
    SKETCH_HH="$2"
    shift # past argument
    ;;
    -r|--inputspace-resolution)
    INPUTSPACE_RESOLUTION="$2"
    shift # past argument
    ;;
    -R|--image-resolution)
    DPI="$2"
    shift # past argument
    ;;
    -f|--format)
    FORMAT="$2"
    shift # past argument
    ;;
    -t|--title)
    TITLE="$2"
    shift # past argument
    ;;
    -m|--dimension)
	DIMENSION="$2"
    shift # past argument
    ;;
    -I|--iterations)
	ITERATIONS="$2"
    shift # past argument
    ;;
    -T|--regressiontype)
	REGRESSION_TYPE="$2"
    shift # past argument
    ;;
    -C|--class)
	CLASS="$2"
    shift # past argument
    ;;
    --default)
    DEFAULT=YES
    ;;
    *)
            # unknown option
    ;;
esac
shift # past argument or value
done

echo $SKETCH_SIZE_DELTA
echo $SKETCH_SIZE_EPSILON


# cleanup
# we do not cleanup. we assume the dataset was generated
# rm -r ${DATA_DIR}

# prepare folders
mkdir -p ${DATA_DIR}/dataset
mkdir -p ${DATA_DIR}/sketch

# generate sample dataset
# NUM_SAMPLES=50000
# NUM_CENTROIDS=3
# resolution of the generated dataset
# RESOLUTION=2
# sketch size parameters
# resolution of the projected input-space
# SKETCH_P=2
# number of heavy hitters
# START=$(date +%s)

# -------------------------------
# perform linear regression the standard way
# -------------------------------

echo "Linear-regression: the standard way"
#blos regression linear ${DATA_DIR}/dataset/points ${DATA_DIR}/standard/points


IFS=', ' read -r -a LIST_SKETCH_SIZE_DELTA <<< "$SKETCH_SIZE_DELTA"
IFS=', ' read -r -a LIST_SKETCH_SIZE_EPSILON <<< "$SKETCH_SIZE_EPSILON"
for d in "${LIST_SKETCH_SIZE_DELTA[@]}"
do
	for e in "${LIST_SKETCH_SIZE_EPSILON[@]}"
	do
		SKETCH_SIZE="${d}:${e}"
		SKETCH_FILE=${d}_${e}

		rm -r ${DATA_DIR}/sketch/${SKETCH_FILE}
		mkdir ${DATA_DIR}/sketch/${SKETCH_FILE}

		echo "scatterplot for $SKETCH_SIZE into $SKETCH_FILE"

		echo "build sketch..."

		 exec 5>&1

		OUT=$(blos examples run eu.blos.scala.examples.regression.${CLASS} ${SKIP_LEARNING} \
				-i ${DATA_DIR}/dataset/points \
				-o ${DATA_DIR}/sketch/${SKETCH_FILE} \
				-n ${ITERATIONS} \
				-s ${SKETCH_SIZE} \
				--resolution ${INPUTSPACE_RESOLUTION} \
				--dimension ${DIMENSION} \
				--num-heavyhitters ${SKETCH_HH} \
				--write-sketch true \
				--verbose true \
				--min 0,-1.1 \
				--max 1.1,1.1 \
				|tee >(cat - | grep "" >&5))


		## read output parameters
		PARAM_D=$(echo 		"$OUT"|grep 	"d="| awk -F "=" '{print $2}')
		PARAM_W=$(echo 		"$OUT"|grep 	"w="| awk -F "=" '{print $2}')

		blos visualize sketch-inputspace2 \
				-i ${DATA_DIR}/sketch/${SKETCH_FILE}/enumerated-input-space \
				--output="${DATA_DIR}/sketch/${SKETCH_FILE}/enumerated-input-space-${SKETCH_FILE}" \
				-f ${FORMAT} \
				-d ${DPI} \
				-C

		blos visualize sketch-inputspace2 \
				-i ${DATA_DIR}/sketch/${SKETCH_FILE}/hh-input-space \
				--output="${DATA_DIR}/sketch/${SKETCH_FILE}/hh-input-space-${SKETCH_FILE}" \
				-f ${FORMAT} \
				-d ${DPI} \
				-C

		REAL_MODEL=$(tail -n 1 ${DATA_DIR}/dataset/real-model | tr " " :)
		LEARNED_MODEL=$(tail -n 1 ${DATA_DIR}/dataset/learned-model| tr " " :)
		SKETCH_ENUM_MODEL=$(tail -n 1 ${DATA_DIR}/sketch/${SKETCH_FILE}/model-results-enumeration | tr " " :)
		SKETCH_HH_MODEL=$(tail -n 1 ${DATA_DIR}/sketch/${SKETCH_FILE}/model-results-hh | tr " " :)

		MODELS="$REAL_MODEL,$LEARNED_MODEL,$SKETCH_ENUM_MODEL,$SKETCH_HH_MODEL"

		echo "final models $MODELS"

		# plot all results into single plot
		# dataset, real model, learned model the standard way + sketched-model
		# ${REGRESSION_TYPE}-
		blos visualize regression-plotter.py \
				-i  ${DATA_DIR}/dataset/points \
				-o ${DATA_DIR}/sketch/${SKETCH_FILE}/result-plot-${SKETCH_FILE}.${FORMAT} \
				-d ${DPI} \
				--index 2,1 \
				--functions="$MODELS" \
				--functype=${REGRESSION_TYPE} \
				--delimiter=, \

	done
done
