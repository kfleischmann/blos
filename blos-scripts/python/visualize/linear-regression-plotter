#!/usr/bin/env python

################################################################################
#
# Authors:       Fleischmann, Kay (fleischmann.kay@googlemail.com)
# Documentation: -
#
################################### LICENSE ####################################
#
# Copyright (C) 2014 Fleischmann, Kay
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################ DOCUMENTATION #################################
#
# see output (-h)
#
#
# blos visualize kmeans-plotter -v {PARAMS} >> store to file
#
################################################################################
import sys
import matplotlib.pyplot as plt
import csv
import os
import numpy as np

def run(**kwargs):
	inputFile 	= kwargs["input"]
	outputFile 	= kwargs["output"]
	func1	 	= kwargs["functions"]

	show = kwargs["show"].lower()


if __name__ == "__main__":
	# handle command line arguments
	# http://docs.python.org/2/library/argparse.html
	import argparse
	from argparse import RawTextHelpFormatter

	argparser = argparse.ArgumentParser(description="""
	blos kmeans-plotter.
	""", formatter_class=RawTextHelpFormatter)

	# specify arguments
	argparser.add_argument("-v", "--verbose",   action="store_true", help="turns on verbosity")
	argparser.add_argument("-H", "--hideaxis",   action="store_true", help="hide axis text")
	argparser.add_argument("-i", "--input", action="store", required=True, help="input file")
	argparser.add_argument("-o", "--output", action="store", required=True, help="output file")
	argparser.add_argument("-d", "--dpi", action="store", required=False, help="dpi of the output file")
	argparser.add_argument("-g", "--grid", action="store_true", required=False, help="shows a grid")
	argparser.add_argument("-R", "--gres", action="store", required=False, help="grid resolution min,max,space")

	#argparser.add_argument("-s", "--show", action="store", required=False, help="result|dataset")


	argparser.add_argument("-f", "--functions", action="store", required=False, help="func1 y=a+bx, a:b,a1:b1,...")

	# validate arguments
	args = argparser.parse_args()


	run(**vars(args))
